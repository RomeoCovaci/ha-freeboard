!function(){freeboard.loadDatasourcePlugin({type_name:"hass",display_name:"Home Assistant",description:"Connects to Home Assistant instance via a WebSocket",external_scripts:["js/haws.umd.js"],settings:[{name:"hass_ws_url",display_name:"Home Assistant WS URL",type:"text",default_value:"ws://127.0.0.1:8123/api/websocket",description:"The URL to the Home Assistant instance WebSocket API.",required:!0},{name:"hass_api_key",display_name:"Home Assistant Auth Token",type:"text",default_value:"",description:"Home Assistant API authentication token. (Optional)",required:!1}],newInstance:function(settings,newInstanceCallback,updateCallback){newInstanceCallback(new HAWSDatasourcePlugin(settings,updateCallback))}});var HAWSDatasourcePlugin=function(settings,updateCallback){function doConnection(){var opts={};currentSettings.hass_api_key&&(opts.authToken=currentSettings.hass_api_key),console.log("HAWS datasource - connecting to "+currentSettings.hass_ws_url),HAWS.createConnection(currentSettings.hass_ws_url,opts).then(function(conn){self.conn=conn,HAWS.subscribeEntities(conn,function(ents){updateCallback(ents)},"state_changed").then(function(cancelSub){self.cancelSubsription=cancelSub})},function(err){console.log("HAWS connection failed "+err)})}var self=this,currentSettings=settings;self.onSettingsChanged=function(newSettings){newSettings.hass_ws_url==currentSettings.hass_ws_url&&newSettings.hass_api_key==currentSettings.hass_api_key||(self.conn&&self.conn.close(),currentSettings=newSettings,doConnection())},self.updateNow=function(){},self.onDispose=function(){self.conn&&self.conn.close()},doConnection()}}(),function(){freeboard.loadWidgetPlugin({type_name:"my_widget_plugin",display_name:"Widget Plugin Example",description:"Some sort of description <strong>with optional html!</strong>",external_scripts:["http://mydomain.com/myscript1.js","http://mydomain.com/myscript2.js"],fill_size:!1,settings:[{name:"the_text",display_name:"Some Text",type:"calculated"},{name:"size",display_name:"Size",type:"option",options:[{name:"Regular",value:"regular"},{name:"Big",value:"big"}]}],newInstance:function(settings,newInstanceCallback){newInstanceCallback(new myWidgetPlugin(settings))}});var myWidgetPlugin=function(settings){var self=this,currentSettings=settings,myTextElement=$("<span></span>");self.render=function(containerElement){$(containerElement).append(myTextElement)},self.getHeight=function(){return"big"==currentSettings.size?2:1},self.onSettingsChanged=function(newSettings){currentSettings=newSettings},self.onCalculatedValueChanged=function(settingName,newValue){"the_text"==settingName&&$(myTextElement).html(newValue)},self.onDispose=function(){}}}();